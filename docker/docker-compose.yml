version: '3.8'

# Example Docker Compose configuration for common development services
# Uncomment the services you need

services:
  # PostgreSQL Database
  # postgres:
  #   image: postgres:16-alpine
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: development
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # Redis Cache
  # redis:
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data

  # MongoDB
  # mongodb:
  #   image: mongo:7
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: admin
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db

  # Nginx Reverse Proxy
  # nginx:
  #   image: nginx:alpine
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro

  # Portainer - Docker Management UI
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   restart: unless-stopped
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data

# Named volumes for data persistence
volumes:
  postgres_data:
  redis_data:
  mongo_data:
  portainer_data:

# Custom network for service communication
networks:
  default:
    name: development
    driver: bridge
